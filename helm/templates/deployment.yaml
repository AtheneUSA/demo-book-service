apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
spec:
  revisionHistoryLimit: 5
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: book-service
      app.kubernetes.io/instance: book-service
  template:
    metadata:
      annotations:
        co.elastic.logs.book-service/enabled: "true"
        co.elastic.logs.book-service/json.add_error_key: "true"
        co.elastic.logs.book-service/json.keys_under_root: "true"
        com.onintranet.elk/service_id: "c02fe809-89f3-49f6-8973-5b0e06c11424"
      labels:
        app.kubernetes.io/name: book-service
        app.kubernetes.io/instance: book-service
        app.kubernetes.io/version: {{ .Chart.AppVersion }}
        app.kubernetes.io/component: api
        app.kubernetes.io/part-of: demo-microservice
        app.kubernetes.io/managed-by: helm
        env: {{ .Values.environment }}
        snow.athene.com/business-owner: John_Hicklin
        snow.athene.com/it-owner: Ethan_Harstad
        snow.athene.com/app-support-group: SMR-TechnicalServices
        snow.athene.com/business-code: "67333"
        snow.athene.com/project-billing-code: BAU
        snow.athene.com/business_criticality: "4"
    spec:
      containers:
      - name: book-service
        image: athenedtr-non-prod.artifactory.onintranet.com/microservices-demo/book-service:{{ .Chart.AppVersion }}
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8000
          protocol: TCP
        resources:
          limits:
            cpu: 200m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 64Mi
